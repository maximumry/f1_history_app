<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.f1.f1history.dao.UserInfoMapper">
	<resultMap type="com.f1.f1history.entity.MUser" id="userMap">
	    <id column="user_id" property="userId"/>
	    <result column="name" property="name"/>
	    <result column="password" property="password"/>
	    <result column="role" property="role"/>
	    <result column="created_at" property="createdAt"/>
	    <result column="email" property="email"/>
	    <collection property="commentList" resultMap="commentMap" columnPrefix="comments_"/>
	    <collection property="inquiryList" resultMap="inquiryMap" columnPrefix="inquiries_"/>
	</resultMap>
	
	<resultMap type="com.f1.f1history.entity.Comment" id="commentMap">
        <id column="comment_id" property="commentId"/>
        <result column="content" property="content"/>
        <result column="event_id" property="eventId"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>
    
    <resultMap type="com.f1.f1history.entity.Inquiry" id="inquiryMap">
        <id column="inquiry_id" property="inquiryId"/>
        <result column="inquiry_select" property="inquirySelect" />
        <result column="content" property="content"/>
        <result column="created_at" property="createdAt" />
        <result column="deleted_at" property="deletedAt" />
    </resultMap>
	
	<insert id="signup">
		INSERT INTO users(
			name
			,password
			,role
			,email)
		VALUES(
			#{name}
			,#{password}
			,#{role}
			,#{email})
	</insert>
	
	<select id="findLoginUser" resultMap="userMap">
		SELECT
			*
		FROM
			users
		WHERE
			email = #{email}
	</select>
	
	<select id="getUsers" resultMap="userMap">
		SELECT
			*
		FROM
			users
	</select>
	
	<select id="getUser" resultMap="userMap">
		SELECT
			users.user_id as user_id
			,users.name as name
			,users.email as email
			,users.password as password
			,users.role as role
			,users.created_at as created_at
			,comments.comment_id as comments_comment_id
			,comments.content as comments_content
			,comments.event_id as comments_event_id
			,comments.created_at as comments_created_at
			,inquiries.inquiry_id as inquiries_inquiry_id
			,inquiries.content as inquiries_content
			,inquiries.inquiry_select as inquiries_inquiry_select
			,inquiries.created_at as inquiries_created_at
		FROM
			users
		LEFT JOIN
			comments
		ON users.user_id = comments.user_id
		LEFT JOIN
			inquiries
		ON users.user_id = inquiries.user_id
		WHERE
			users.user_id = #{user_id}
	</select>
	
	<update id="updateUser">
		UPDATE
			users
		SET
			name = #{mUser.name}
			,email = #{mUser.email}
			,password = #{mUser.password}
			,role = #{mUser.role}
		WHERE user_id = #{mUser.userId}
	</update>
	
	<delete id="deleteUser">
		DELETE FROM
			users
		WHERE
			user_id = #{mUser.userId}
	</delete>
	
	<select id="getUserPassword" resultType="String">
		SELECT
			password
		FROM 
			users
		WHERE
			user_id = #{userId}
	</select>
</mapper>